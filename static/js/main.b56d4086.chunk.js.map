{"version":3,"sources":["components/Followers.js","components/User.js","App2.js","index.js"],"names":["Followers","_ref","followers","onMoreIssuesFetch","react_default","a","createElement","id","className","totalCount","edges","map","follower","key","node","login","href","url","target","rel","src","avatarUrl","alt","width","name","pageInfo","hasNextPage","onClick","User","user","errors","error","message","join","components_Followers","gitHubService","axios","create","baseURL","headers","Authorization","concat","getIssuesOfRepository","cursor","post","query","variables","resolveIssuesQuery","queryResult","state","_queryResult$data","data","oldFollowers","newFollowers","updatedFollowers","Object","toConsumableArray","objectSpread","App","onChange","event","_this","setState","value","onSubmit","onGitHubFetch","preventDefault","then","endCursor","this","_this$state","htmlFor","type","style","components_User","Component","ReactDOM","render","App2","document","getElementById"],"mappings":"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","file":"static/js/main.b56d4086.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Followers = ({ followers, onMoreIssuesFetch }) => (\r\n    <div id=\"repository\">\r\n      <h2>Followers: <span className=\"follower-count\">{followers.totalCount}</span></h2>\r\n      <ul className=\"tiles\">\r\n        {followers.edges.map(follower => (\r\n          <li className=\"tile fade-in\" key={follower.node.login}>\r\n            <a href={follower.node.url} target=\"_blank\" rel='noreferrer noopener' key={follower.node.id}>\r\n            <div className=\"no-wrap\">\r\n                <img src={follower.node.avatarUrl} alt=\"avatar\" width=\"10%\" />              \r\n                <span className=\"follower-name\">{follower.node.name}</span>{' '}{follower.node.login}\r\n              </div>              \r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n  \r\n      <hr />\r\n\r\n      {followers.pageInfo.hasNextPage && (\r\n        <button className=\"fetch-more\" onClick={onMoreIssuesFetch}>there are more...</button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\nexport default Followers;","import React from 'react'\r\nimport Followers from './Followers'\r\n\r\nconst User = ({\r\n    user,\r\n    errors,\r\n    onMoreIssuesFetch,\r\n  }) => {\r\n    if (errors) {\r\n      return (\r\n        <p>\r\n          <strong>Something went wrong:</strong>\r\n          {errors.map(error => error.message).join(' ')}\r\n        </p>\r\n      );\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        <a href={user.url} key={user.login}>\r\n          <img src={user.avatarUrl} alt=\"avatar\" />\r\n          <h4 className=\"user-name\">{user.name}</h4>\r\n          <span className=\"user-login\">{user.login}</span>\r\n        </a>\r\n        <Followers\r\n          followers={user.followers}\r\n          onMoreIssuesFetch={onMoreIssuesFetch}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default User;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport User from './components/User'\r\n\r\nconst APP_TITLE = 'GitHub GraphQL API';\r\n\r\nconst token = \"75d4d2987c9c8f14eeec85ccace4c571d571d372\";\r\n\r\nconst gitHubService = axios.create({\r\n  baseURL: 'https://api.github.com/graphql',\r\n  headers: {\r\n    Authorization: `bearer ${\r\n      token\r\n    }`,\r\n  },\r\n});\r\n\r\nconst USER_FOLLOWERS_QUERY = `\r\nquery ($login: String!, $cursor: String) {\r\n    user(login: $login) {\r\n      login\r\n      name\r\n      avatarUrl\r\n      url\r\n      followers(first: 10, after: $cursor) {\r\n        totalCount\r\n        edges {\r\n          node {            \r\n            login\r\n            name\r\n            avatarUrl\r\n            company\r\n            url\r\n          }\r\n        }\r\n        pageInfo {\r\n          endCursor\r\n          hasNextPage\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst getIssuesOfRepository = (login, cursor) => {\r\n  return gitHubService.post('', {\r\n    query: USER_FOLLOWERS_QUERY,\r\n    variables: { login, cursor },\r\n  });\r\n};\r\n\r\nconst resolveIssuesQuery = (queryResult, cursor) => state => {\r\n  const { data, errors } = queryResult.data;\r\n\r\n  if (!cursor) {\r\n    return {\r\n      user: data.user,\r\n      errors,\r\n    };\r\n  }\r\n\r\n  // merging old followers with newly fetched followers\r\n  const { edges: oldFollowers } = state.user.followers;\r\n  const { edges: newFollowers } = data.user.followers;\r\n  const updatedFollowers = [...oldFollowers, ...newFollowers];\r\n\r\n  return {\r\n    user: {\r\n      ...data.user,\r\n      followers: {\r\n        ...data.user.followers,\r\n        edges: updatedFollowers,\r\n      },\r\n    },\r\n    errors,\r\n  };\r\n};\r\n\r\nclass App extends Component {\r\n  state = {\r\n    login: 'holman',\r\n    user: null,\r\n    errors: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.onGitHubFetch(this.state.login);\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({ login: event.target.value });\r\n  };\r\n\r\n  onSubmit = event => {\r\n    this.onGitHubFetch(this.state.login);\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onGitHubFetch = (login, cursor) => {\r\n    getIssuesOfRepository(login, cursor).then(queryResult =>\r\n      this.setState(resolveIssuesQuery(queryResult, cursor)),\r\n    );\r\n  };\r\n\r\n  onMoreIssuesFetch = () => {\r\n    const {\r\n      endCursor,\r\n    } = this.state.user.followers.pageInfo;\r\n\r\n    this.onGitHubFetch(this.state.login, endCursor);\r\n  };\r\n\r\n  render() {\r\n    const { login, user, errors } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{APP_TITLE}</h1>\r\n        <form onSubmit={this.onSubmit}>\r\n          <label htmlFor=\"login\">\r\n            Enter user's login name:\r\n          </label>\r\n          <input\r\n            id=\"login\"\r\n            type=\"text\"\r\n            value={login}\r\n            onChange={this.onChange}\r\n            style={{ width: '300px' }}\r\n          />\r\n          <button type=\"submit\">Search</button>\r\n        </form>\r\n\r\n        <hr />\r\n\r\n        {user ? (\r\n          <User\r\n            user={user}\r\n            errors={errors}\r\n            onMoreIssuesFetch={this.onMoreIssuesFetch}\r\n          />\r\n        ) : (\r\n          <p>No information yet ...</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App2 from './App2';\r\n\r\nReactDOM.render(<App2 />, document.getElementById('root'));\r\n"],"sourceRoot":""}